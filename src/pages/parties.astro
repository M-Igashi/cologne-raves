---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import PartyCard from '../components/PartyCard.astro';
import { getAllParties } from '../lib/getAllParties';

// Europe/Berlin timezone における今週日曜の 00:00 を計算
function getNextSundayStart() {
  const now = new Date();
  const berlinNow = new Date(now.toLocaleString("en-US", { timeZone: "Europe/Berlin" }));
  const day = berlinNow.getDay();
  const diff = (7 - day) % 7;
  const sunday = new Date(berlinNow);
  sunday.setDate(berlinNow.getDate() + diff);
  sunday.setHours(0, 0, 0, 0);
  return sunday;
}

// Europe/Berlin timezone で今月の1日を取得
const berlinNow = new Date(new Date().toLocaleString("en-US", { timeZone: "Europe/Berlin" }));
const startOfMonth = new Date(berlinNow.getFullYear(), berlinNow.getMonth(), 1);

// 今月1日以降のパーティーのみ取得
const allParties = (await getAllParties()).filter(p => new Date(p.date) >= startOfMonth);

// 月別にグルーピング
const grouped = allParties.reduce((acc, party) => {
  const date = new Date(party.date);
  const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
  if (!acc[monthKey]) acc[monthKey] = [];
  acc[monthKey].push(party);
  return acc;
}, {} as Record<string, typeof allParties>);

// 月の並び順のためにキーを取得
const sortedMonthKeys = Object.keys(grouped).sort();
---

<html lang="en">
  <BaseHead title="All Parties | Cologne Raves" />
  <body class="bg-white text-gray-900 font-sans max-w-3xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
    <Header />
    <nav class="flex flex-wrap gap-2 mb-6 text-sm">
      <a href="/" class="px-3 py-1 border rounded-full text-sm">This Week</a>
      <a href="/parties" class="px-3 py-1 border rounded-full bg-black text-white text-sm">All Parties</a>
    </nav>

    <h2 class="text-xl font-semibold mb-4">All Upcoming Parties</h2>

    {
      sortedMonthKeys.map(month => (
        <section>
          <h3 class="text-lg font-medium mt-6 mb-2">{month}</h3>
          <ul class="space-y-4">
            {grouped[month].map(party => (
              <li><PartyCard {...party} showEditLink={false} /></li>
            ))}
          </ul>
        </section>
      ))
    }

    <Footer />
  </body>
</html>