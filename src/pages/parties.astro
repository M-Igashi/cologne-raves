---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import PartyCard from '../components/PartyCard.astro';
import { getAllParties } from '../lib/getAllParties';
import { toZonedTime } from 'date-fns-tz';
import { startOfWeek } from 'date-fns';

const allParties = await getAllParties();

// Europe/Berlin タイムゾーンの今週月曜 00:00 を算出
const berlinNow = toZonedTime(new Date(), 'Europe/Berlin');
const mondayStart = startOfWeek(berlinNow, { weekStartsOn: 1 });

// 今週以降のイベントに限定
const filteredParties = allParties.filter((party) => {
  const partyDate = new Date(party.date);
  return partyDate >= mondayStart;
});

// 月別にグループ化
const partiesByMonth: Record<string, typeof filteredParties> = {};
for (const party of filteredParties) {
  const date = new Date(party.date);
  const monthKey = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;
  if (!partiesByMonth[monthKey]) {
    partiesByMonth[monthKey] = [];
  }
  partiesByMonth[monthKey].push(party);
}
---

<html lang="en">
  <head>
    <BaseHead title="All Parties | Cologne Raves" />
  </head>
  <body class="min-h-screen flex flex-col">
    <Header active="all-parties" />
    <main class="max-w-3xl mx-auto p-4 flex-1">
      <h1 class="text-2xl font-semibold mb-4">All Parties</h1>

      {
        Object.keys(partiesByMonth).sort().map((monthKey) => (
          <section>
            <h2 class="text-xl font-semibold mt-6 mb-2">{monthKey}</h2>
            {
              partiesByMonth[monthKey].map((party) => (
                <PartyCard {...party} />
              ))
            }
          </section>
        ))
      }
    </main>
    <Footer />
  </body>
</html>