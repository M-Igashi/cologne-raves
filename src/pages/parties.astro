---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import PartyCard from '../components/PartyCard.astro';
import { getAllParties } from '../lib/getAllParties';

const parties = await getAllParties();

// Get Sunday of this week (based on Monday-starting week)
const now = new Date();
const day = now.getDay(); // Sunday=0, Monday=1, ..., Saturday=6
const diffToMonday = (day + 6) % 7;
const monday = new Date(now);
monday.setDate(now.getDate() - diffToMonday);
const sundayThisWeek = new Date(monday);
sundayThisWeek.setDate(monday.getDate() + 6);
sundayThisWeek.setHours(0, 0, 0, 0);

// Filter events on or after this week's Sunday
const upcomingParties = parties.filter(p => {
  const date = new Date(p.date);
  return date >= sundayThisWeek;
});

// Group events by month
const grouped = upcomingParties.reduce((acc, party) => {
  const date = new Date(party.date);
  const key = date.toLocaleString('en-US', { year: 'numeric', month: 'long' });
  if (!acc[key]) acc[key] = [];
  acc[key].push(party);
  return acc;
}, {});
---

<html lang="en">
  <BaseHead title="All Parties | Cologne Raves" />
  <body class="bg-white text-gray-900 font-sans max-w-3xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
    <Header />
    <nav class="flex flex-wrap gap-2 mb-6 text-sm">
      <a href="/" class="px-3 py-1 border rounded-full text-sm">This Week</a>
      <a href="/parties" class="px-3 py-1 border rounded-full bg-black text-white text-sm">All Parties</a>
    </nav>


    {
      Object.entries(grouped).map(([month, parties]) => (
        <section>
          <h3 class="text-lg font-medium mt-6 mb-2">{month}</h3>
          <ul class="space-y-4">
            {parties.map(party => (
              <li><PartyCard {...party} /></li>
            ))}
          </ul>
        </section>
      ))
    }

    <Footer />
  </body>
</html>