---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import PartyCard from '../components/PartyCard.astro';
import { getFeaturedParties } from '../lib/getFeaturedParties';

const parties = await getFeaturedParties();

// Group parties by weekday
const daysOfWeek = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];

const grouped = parties.reduce((acc, party) => {
  const date = new Date(party.date);
  const weekday = daysOfWeek[date.getDay()];
  if (!acc[weekday]) acc[weekday] = [];
  acc[weekday].push(party);
  return acc;
}, {});
---

<html lang="en">
  <BaseHead title="This Week | Cologne Raves" />
  <body class="bg-white text-gray-900 font-sans max-w-3xl mx-auto px-4 py-6 sm:px-6 lg:px-8">
    <Header />
    <nav class="flex flex-wrap gap-2 mb-6 text-sm">
      <a href="/" class="px-3 py-1 border rounded-full bg-black text-white text-sm">This Week</a>
      <a href="/parties" class="px-3 py-1 border rounded-full text-sm">All Parties</a>
    </nav>


    {
      daysOfWeek.map(day => (
        grouped[day] && grouped[day].length > 0 ? (
          <section>
            <h3 class="text-lg font-medium mt-6 mb-2">{day}</h3>
            <ul class="space-y-4">
              {grouped[day].map(party => (
                <li>
                  <PartyCard
                    id={party.id}
                    date={party.date}
                    venue={party.venue}
                    title={party.title}
                    url={party.url}
                    artists={party.artists}
                    startTime={party.startTime}
                  />
                </li>
              ))}
            </ul>
          </section>
        ) : null
      ))
    }

    <Footer />
  </body>
</html>