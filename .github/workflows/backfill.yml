name: backfill

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'data/*.json'
  pull_request:
    paths:
      - 'data/*.json'

jobs:
  backfill:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0  # Fetch full history for Git timestamp-based processing

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run backfill script
        run: node backfill-id.js

      - name: Commit & Push changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add data/*.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "chore: backfill missing IDs"
            git push https://x-access-token:${{ secrets.GH_PAT }}@github.com/${{ github.repository }}.git HEAD:main
            echo "Changes pushed - main deploy workflow will handle deployment"
          fi

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            
            // Check if any files were modified
            const { execSync } = require('child_process');
            const diffOutput = execSync('git diff --name-only data/*.json').toString().trim();
            
            if (diffOutput) {
              const modifiedFiles = diffOutput.split('\n');
              const comment = `ðŸ¤– **ID Backfill Bot**\n\nI've added missing IDs to the following files:\n${modifiedFiles.map(f => `- \`${f}\``).join('\n')}\n\nPlease review the changes.`;
              
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: comment
              });
            }
